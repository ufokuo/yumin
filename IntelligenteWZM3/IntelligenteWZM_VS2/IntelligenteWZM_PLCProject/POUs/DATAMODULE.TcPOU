<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.16">
  <POU Name="DATAMODULE" Id="{3daf9168-c552-4d1b-bd45-9a3674f3898d}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM DATAMODULE
VAR
	//ADAS-Daten (Spindelstrom, Achspositionen und Drehzahl) aus GVL, dann kann es weg?
	X_Machine_CS 	: LREAL;
	Y_Machine_CS 	: LREAL;
	Z_Machine_CS 	: LREAL;
	C_Machine_CS 	: LREAL;
	B_Machine_CS 	: LREAL;

	X_V_Machine_CS 	: LREAL;
	Y_V_Machine_CS 	: LREAL;
	Z_V_Machine_CS 	: LREAL;
	C_V_Machine_CS 	: LREAL;
	B_V_Machine_CS 	: LREAL;
	n_Spindle 		: LREAL;
	
	X_a_Machine_CS 	: LREAL;
	Y_a_Machine_CS 	: LREAL;
	Z_a_Machine_CS 	: LREAL;
	C_a_Machine_CS 	: LREAL;
	B_a_Machine_CS 	: LREAL;
	n_a_Spindle 	: LREAL;
	
	X_I				: LREAL;
	Y_I				: LREAL;
	Z_I				: LREAL;
	C_I				: LREAL;
	B_I 			: LREAL;
	n_I 			: LREAL;
			
	
	//VARIABLEN FÜR SCHNITTSTELLEN:
	{attribute 'OPC.UA.DA' := '1'}
	Database :ARRAY[0..27]OF LREAL;

	
	//Für GUI
	yGraph1 : LREAL;
	yGraph2 : LREAL;
	yGraph3		: LREAL;
	Timer		: REAL := 0;
	//Parameter von GUI
	{attribute 'OPC.UA.DA' := '1'}
	Depth		: LREAL;
	{attribute 'OPC.UA.DA' := '1'}
	Width		: LREAL;
	Select_NN1	: BOOL;
	Select_NN2  : BOOL;
	Start  		: BOOL;
	Stop	  	: BOOL;
	Reset  		: BOOL;
	//für NN-Config-Info für die Vorverarbeitung
	{attribute 'OPC.UA.DA' := '1'}
	Config_NN1  : BOOL := FALSE;
	{attribute 'OPC.UA.DA' := '1'}
	Config_NN2  : BOOL := FALSE;
	{attribute 'OPC.UA.DA' := '1'}
	NewConfig	: BOOL := FALSE;
	//Configbestätigung von NN
	{attribute 'OPC.UA.DA' := '1'}
	{attribute 'OPC.UA.DA.Access' := '1'}
	AcceptConfig : BOOL;


	CycleTime		  : INT := 10; (*ms*)
	CommunicationState: INT; (*1=SendConfig, 2=WaitForConfig, 3=Start, 4=Stop, 5=Reset*)
	SetZeros : INT :=0;
	// Trigger Statusänderung
	TriggerStartF: F_TRIG;
	TriggerStopF	: F_TRIG;
	TriggerResetF : F_TRIG;
	TriggerStartR : R_TRIG;
	TriggerStopR : R_TRIG;
	TriggerResetR : R_TRIG;
	//Trigger NN-Änderungen
	Select_NN1_old	  : BOOL;
	Select_NN2_old	  : BOOL;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[TriggerStartF(CLK := Start);
TriggerResetF(CLK := Reset);
TriggerStopF(CLK := Stop);
TriggerStartR(CLK := Start);
TriggerResetR(CLK := Reset);
TriggerStopR(CLK := Stop);

IF TriggerStartR.Q OR TriggerStartF.Q THEN
	CommunicationState := 1;
ELSIF TriggerStopR.Q OR TriggerStopF.Q THEN
	CommunicationState := 4;
ELSIF TriggerResetR.Q OR TriggerResetF.Q THEN
	CommunicationState := 5;
END_IF

CASE CommunicationState OF
	1:
		NewConfig := TRUE;
		IF Select_NN1 = Select_NN2 THEN
			Config_NN1 := Config_NN2 := FALSE;
		ELSE
			Config_NN1 := Select_NN1;
			Config_NN2 := Select_NN2;
		END_IF
		Select_NN1_old := Select_NN1;
		Select_NN2_old := Select_NN2;
		CommunicationState := 2;
	2:
		IF AcceptConfig THEN
			CommunicationState := 3;
			NewConfig := FALSE;
		END_IF
	3:
		Database[0] := X_Machine_CS;
		Database[1] := Y_Machine_CS;
		Database[2] := Z_Machine_CS;
		Database[3] := C_Machine_CS;
		Database[4] := B_Machine_CS;
		Database[5] := X_V_Machine_CS;
		Database[6] := Y_V_Machine_CS;
		Database[7] := Z_V_Machine_CS;
		Database[8] := C_V_Machine_CS;
		Database[9] := B_V_Machine_CS;
		Database[10] := n_Spindle;
		Database[11] := X_a_Machine_CS;
		Database[12] := Y_a_Machine_CS;
		Database[13] := Z_a_Machine_CS;
		Database[14] := C_a_Machine_CS;
		Database[15] := B_a_Machine_CS;
		Database[16] := n_a_Spindle;
		Database[17] := X_I;
		Database[18] := Y_I;
		Database[19] := Z_I;
		Database[20] := C_I;
		Database[21] := B_I;
		Database[22] := n_I;
		Database[23] := SIGNAL_FORCE[1];
		Database[24] := SIGNAL_FORCE[2];
		Database[25] := SIGNAL_FORCE[3];
		Database[26] := Depth;
		Database[27] := Width;

		yGraph1 := X_Machine_CS;
		yGraph2 := Y_Machine_CS;
		yGraph3 := Z_Machine_CS;
		Timer := Timer + (CycleTime / 100);
		
		DATA_PREPARATION ();
		
		IF Select_NN1_old <> Select_NN1_old OR Select_NN2_old <> Select_NN2 THEN
			CommunicationState := 1;
		END_IF
	4:
		Config_NN1 := FALSE;
		Config_NN2 := FALSE;
	5:
		FOR SetZeros := 0 TO 27 BY 1 DO
			Database[SetZeros] := 0 ;
		END_FOR;
		yGraph1 := yGraph2 := yGraph3 := 0;
		Config_NN1 := FALSE;
		Config_NN2 := FALSE;
		Timer := 0;
END_CASE;]]></ST>
    </Implementation>
    <LineIds Name="DATAMODULE">
      <LineId Id="335" Count="13" />
      <LineId Id="273" Count="18" />
      <LineId Id="354" Count="0" />
      <LineId Id="359" Count="3" />
      <LineId Id="355" Count="0" />
      <LineId Id="364" Count="4" />
      <LineId Id="356" Count="0" />
      <LineId Id="369" Count="0" />
      <LineId Id="388" Count="0" />
      <LineId Id="371" Count="13" />
      <LineId Id="387" Count="0" />
      <LineId Id="313" Count="3" />
      <LineId Id="563" Count="2" />
      <LineId Id="318" Count="2" />
      <LineId Id="322" Count="2" />
      <LineId Id="326" Count="1" />
      <LineId Id="389" Count="0" />
      <LineId Id="391" Count="0" />
      <LineId Id="330" Count="3" />
      <LineId Id="255" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
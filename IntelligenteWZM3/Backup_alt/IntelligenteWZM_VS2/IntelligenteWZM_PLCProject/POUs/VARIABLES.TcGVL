<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.16">
  <GVL Name="VARIABLES" Id="{8f19ed25-baa4-4d2f-b53b-4b41835c8975}">
    <Declaration><![CDATA[//{attribute 'qualified_only'}
VAR_GLOBAL
	// Eingangssignale aus den Klemmen 
	// Oversampling-Klemmen EL3632
	A_OVERSAMPLING_INPUT_1 AT%I*: ARRAY[0..9] OF INT; // Sensor 1 X 
	A_OVERSAMPLING_INPUT_2 AT%I*: ARRAY[0..9] OF INT; // Sensor 1 Y
	A_OVERSAMPLING_INPUT_3 AT%I*: ARRAY[0..9] OF INT; // Sensor 1 Z
	A_OVERSAMPLING_INPUT_4 AT%I*: ARRAY[0..9] OF INT; // Sensor 2 X
	A_OVERSAMPLING_INPUT_5 AT%I*: ARRAY[0..9] OF INT; // Sensor 2 Y
	A_OVERSAMPLING_INPUT_6 AT%I*: ARRAY[0..9] OF INT; // Sensor 2 Z
	
	//  CAN-BUS I/O (EL6751)
	CAN_HUB AT %Q*: ARRAY [0..7] OF USINT := [0, 0, 0, 0, 0, 0, 0, 0];		// HUB OUT FRAME, EVENT TIME HAS TO BE SET TO 65000!!!!
	CAN_SENSOR_1 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 1
	CAN_SENSOR_2 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 2
	CAN_SENSOR_3 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 3
	CAN_SENSOR_4 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 4
	CAN_SENSOR_5 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 5
	CAN_SENSOR_6 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 6
	CAN_SENSOR_7 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 7
	CAN_SENSOR_8 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 8
	CAN_SENSOR_9 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 9
	CAN_SENSOR_10 AT %I*: CANMESSAGE;										// IN FRAME OF SENSOR ID 10
	
//	VARIABLES FOR SENSOR CONTROL (CAN)
	HUB_STATE: BOOL:=FALSE;													// TRUE: HUB IS SENDING FRAMES, FALSE: HUS IS NOT SENDING FRAMES  
	CAN_CONTROL_STATE: BYTE := 0;											// SENSOR COMMANDs, 0: STOP SENSOR, 1: START SENSOR, 2: RESET SENSOR, 3: PARAMETRIZE SENSOR, 11: DEFAULT 
	CAN_TRIGGER_STATE: BYTE := 0;											// 1: SENSOR TRIGGER ON, 0: SENSOR TRIGGER OFF
	CAN_CONTROL_FRAME: ARRAY [0..7] OF USINT :=[0, 0, 0, 0, 0, 0, 0, 0];	// FRAME TO BE SENT BY THE HUB TO THE SENSORS
	CAN_PARAMETER_FRAME: ARRAY [0..7] OF USINT :=[0, 0, 0, 0, 0, 0, 0, 0];	// PARAMETER FRAME TO BE SENT BY THE HUB TO THE SENSORS
	K_TRIGGER: WORD:=1;														// SETTING FOR TRIGGER FREQUENCY, K_TRIGGER=T_Trigger/T_PLC
	M_PER_FRAME: USINT:=1;  												// NUMBER OF NEEDED MEASUREMENTS IN FRAME COMMING FROM SENSORS, M_PER_FRAME=1..4
	N_SAMPLES_PER_M: USINT:=1;												// NUMBER OF SAMPLES PER NEEDED MEASUREMENT
	SIGNAL_SYNCH: WORD;														// TRIGGER NUMBER FOR SIGNAL SYNCHRONISATION
	
//  VARIABLES FOR SENSOR SIGNALS	
	SIGNAL_SENSOR_1: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 1, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_2: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 2, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_3: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 3, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_4: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 4, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_5: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 5, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_6: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 6, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_7: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 7, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_8: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 8, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_9: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 9, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	SIGNAL_SENSOR_10: ARRAY[1..5] OF WORD;									// SIGNALS FROM SENSOR ID 10, [1]..[4]: MEASUREMENT 1..4, [5]: COMBINED SIGNAL FROM MEASUREMENTS
	
	SIGNAL_SENSOR_1_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_1[5]
	SIGNAL_SENSOR_2_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_2[5]
	SIGNAL_SENSOR_3_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_3[5]
	SIGNAL_SENSOR_4_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_4[5]	
	SIGNAL_SENSOR_5_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_5[5]
	SIGNAL_SENSOR_6_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_6[5]
	SIGNAL_SENSOR_7_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_7[5]
	SIGNAL_SENSOR_8_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_8[5]
	SIGNAL_SENSOR_9_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_9[5]
	SIGNAL_SENSOR_10_FLT: REAL;												// FILTERED SIGNAL SIGNAL_SENSOR_10[5]
	
	
	// SETTINGS FOR LOW PASS FILTERS
	//Matlab: Fsamp=1000, Fg=10, Rp=0.5, Rs=20, Wp=Fg/Fsamp*2, [B_FILTER,A_FILTER] = ellip(3,Rp,Rs,Wp);
	//A=['[' num2str(A_FILTER(1)) ', ' num2str(A_FILTER(2)) ', ' num2str(A_FILTER(3)) ', ' num2str(A_FILTER(4)) ']']
	//B=['[' num2str(B_FILTER(1)) ', ' num2str(B_FILTER(2)) ', ' num2str(B_FILTER(3)) ', ' num2str(B_FILTER(4)) ']']
	A_FILTER: ARRAY [1..4] OF REAL:=[1, -2.8353, 2.6948, -0.85785];
	B_FILTER: ARRAY [1..4] OF REAL:=[0.021368, -0.020532, -0.020532, 0.021368];

	SENSOR_STATE: ARRAY[1..10] OF BOOL;										// TRUE: SENSOR IS SENSING FRAMES, FALSE: SENSOR IS NOT SENDING FRAMES
	SIGNAL_DEVIATION: ARRAY [1..10] OF WORD:=[0,0,0,0,0,0,0,0,0,0];			// NOISE DEVIATION OF SENSOR SIGNALS
	
	// 	PROFI-BUS I/O (EL6731)
	
	DP_MISO_WORD_1 AT %Q*: WORD;											// OUT FRAME 1 (BECKHOFF TO SINUMERIK)
	DP_MISO_WORD_2 AT %Q*: WORD;											// OUT FRAME 2 (BECKHOFF TO SINUMERIK)
	DP_MISO_WORD_3 AT %Q*: WORD;											// OUT FRAME 3 (BECKHOFF TO SINUMERIK)
	DP_MISO_WORD_4 AT %Q*: WORD;											// OUT FRAME 4 (BECKHOFF TO SINUMERIK)
	DP_MOSI_WORD_1 AT %I*: WORD;											// IN FRAME 1 (SINUMERIK TO BECKHOFF)
	DP_MOSI_WORD_2 AT %I*: WORD;											// IN FRAME 2 (SINUMERIK TO BECKHOFF)
	DP_MOSI_WORD_3 AT %I*: WORD;											// IN FRAME 3 (SINUMERIK TO BECKHOFF)
	DP_MOSI_WORD_4 AT %I*: WORD;											// IN FRAME 4 (SINUMERIK TO BECKHOFF)
	
//	ANALOG I (EL3104)
	A_INPUT_1 AT %I*: INT;													// ANALOG INPUT 1
	A_INPUT_2 AT %I*: INT;													// ANALOG INPUT 2
	A_INPUT_3 AT %I*: INT;													// ANALOG INPUT 3
	A_INPUT_4 AT %I*: INT;													// ANALOG INPUT 4

// Input fuer Beschleunigungssensoren	
	A_INPUT_5 	AT %I*: INT;													// ANALOG INPUT 5
	A_INPUT_6 	AT %I*: INT;													// ANALOG INPUT 6
	A_INPUT_7 	AT %I*: INT;													// ANALOG INPUT 6
	A_INPUT_8 	AT %I*: INT;													// ANALOG INPUT 6
	A_INPUT_9 	AT %I*: INT;													// ANALOG INPUT 6
	A_INPUT_10 	AT %I*: INT;													// ANALOG INPUT 6
	
//SETTINGS FOR GAINS
	A_GAIN_1: REAL:=-100;
	A_GAIN_2: REAL:=-100;
	A_GAIN_3: REAL:=-100;
	A_GAIN_4: REAL:=1;
	
//  ANALOG I SIGNALS
	A_SIGNAL_1 : REAL:=0;													// ANALOG INPUT SIGNAL 1 
	A_SIGNAL_2 : REAL:=0;													// ANALOG INPUT SIGNAL 2
	A_SIGNAL_3 : REAL:=0;													// ANALOG INPUT SIGNAL 3
	A_SIGNAL_4 : REAL:=0;													// ANALOG INPUT SIGNAL 4
	A_SIGNAL_5 : REAL:=0;
	A_SIGNAL_6 : REAL:=0;
	A_SIGNAL_7 : REAL:=0;
	
//  VARIABLES FOR FORCE SIGNALS
	SIGNAL_FORCE: ARRAY[1..3] OF REAL;										// FORCE SIGNALS, 1: X-FORCE, 2: Y-FORCE, 3: Z-FORCE in MCS
	SIGNAL_FORCE_FLT: ARRAY[1..3] OF REAL;									// FILTERED FORCE SIGNALS, 1: X-FORCE, 2: Y-FORCE, 3: Z-FORCE in MCS
	FORCE_RESET: WORD :=0;													// CONTROL VARIABLE FOR FORCE RESET
	FORCE_ACT: REAL;														// ACTUAL USED FORCE SIGNAL 

//	VARIABLES FOR POSITION SIGNALS
	Y_POSITION_ACT: REAL;
	X_POSITION_ACT: REAL;
	Z_POSITION_ACT: REAL; 

	
// FORCE CALIBARTION MATRIXES
FC_MATRIX_X: ARRAY [1..10] OF REAL:=[-0.76798,0.10123,1.0077,-0.3399,0.8848,-1.162,0,1.0382];
FC_MATRIX_Y: ARRAY [1..10] OF REAL:=[-0.92845,0.11284,1.2124,-0.39371,0.99951,-1.3615,0,1.1904]; 
FC_MATRIX_Z: ARRAY [1..10] OF REAL:=[-0.30943,0.061409,0.43615,-0.13896,0.34508,-0.49067,0,0.43918];	
	
	//FC_MATRIX_X: ARRAY [1..10] OF REAL:=[0,0,0,0,0,1,0,0,0,-1];
	//FC_MATRIX_Y: ARRAY [1..10] OF REAL:=[0,0,0,0,0,1,0,0,0,-1]; 
	//FC_MATRIX_Z: ARRAY [1..10] OF REAL:=[0,0,0,0,0,0,0,0,0,0];
	
	

	
//  VARIABLES FROM NC PROGRAM 	
	ACT_NC_PROGRAM: WORD:=0;												
	ACT_NC_PROGRAM_STEP: WORD:=0;												
	ACT_NC_PARAM_3: WORD:=0;
	ACT_NC_PARAM_4: WORD:=0;
	ACT_NC_PARAM_5: REAL:=0;
	ACT_NC_PARAM_6: REAL:=0;
	
//	VARIABLES TO NC PROGRAM
	SET_NC_PARAM_1: WORD:=0;
	SET_NC_PARAM_2: WORD:=0;
	SET_NC_PARAM_3: WORD:=0;
	SET_NC_PARAM_4: WORD:=0;
	
	
//  VARIABLES FOR TOOL STIFFNESS MEASUREMENT	
	TOOL_STIFFNESS : ARRAY [1..2] OF REAL:=[0, 0];				// in N/µm FFOR CONTACT PTS
	COLLISION_DISTANCE : REAL:=0;			// in µm
	SHAPE_DEVIATION : REAL:=0;				// in µm
	FORCE_DEVIATION : ARRAY [1..2] OF REAL:=[0, 0];				// in N
	TOOL_BLENDING_STIFFNESS : ARRAY [1..2] OF REAL:=[0, 0];		// in N.mm²
	TOOL_LENGTH : REAL:=33; 				// in mm
	Z_POS_STIFF_MEAS : ARRAY [1..2] OF REAL:=[0, 0]; 			// in mm
	a_POS : ARRAY [1..2] OF REAL:=[0, 0];						// in mm

	TOOL_STIFFNESS_SELC_PTS: ARRAY [1..2, 1..5] OF REAL:=[0, 0, 8, 0, 0, 0, 0, 8, 0, 0];
	Z_POS_SELC_PTS: ARRAY [1..5] OF REAL:=[0, -2.5, -8.5, -12, -17];
	a_REF: REAL:=0;
	AX_SELC_PTS: ARRAY [1..5] OF REAL:=[0, 0, 0, 0, 0];
	Z_POS_REF: REAL:=-17;
	
	TOOL_STIFFNESS_ACT: REAL:=0;
	TOOL_BLENDING_STIFFNESS_ACT: REAL:=0;
	a_ACT: REAL:=0;
	AX_ACT: REAL:=0;
	Z_POS_ACT: REAL:=0;
	
	
	
	
//  VARIABLES FOR TOOL DEFLECTION CONTROL 
	DEFLECTION_ACT: REAL;
	DEFLECTION_REF: REAL:=25;
	DEFLECTION_DIF: REAL:=0;
	DEFLECTION_DIF_SUM: REAL:=0;
	DEFLECTION_CONTROL_ON: INT:=0;	
	CONTROL_RESET: INT:=0;	
	CONTROLLER_TYPE: INT:=0;
	CONTROL_START_CONDITION: BOOL:=FALSE;
	CONTROL_START: INT:=0;
	CUTTING_ON: INT:=0;	
	CUTTING_FORCE_MIN: REAL:=50;
	REF_REACHED: INT:=0;
	
	SATURATION_OVRD_MAX: REAL:=120;
	SATURATION_OVRD_MIN: REAL:=20;
	OVRD_MID: REAL:=70;	
	OVRD_MACHINE: REAL:=100;
	OVRD_REG: REAL:=0;
	OVRD_REG_P: REAL:=0;
	OVRD_REG_I: REAL:=0;
	WINDUP: REAL:=0;
	OVRD_DIF: REAL;
	K_P: REAL:=0.75;								// PROPORTIONAL REGULATOR FACTOR
	K_I: REAL:=60;						// INT. REGULATOR FACTOR
	T_S: REAL:=0.004;							// SAMPLE TIME
	K_WINDUP: REAL:=0.05;						// WINDUP FACTOR
	
	
	SATURATION_POS_MAX: REAL:=200;
	SATURATION_POS_MIN: REAL:=-200;
	POS_MID: REAL:=0;	
	POS_MACHINE: REAL:=0;
	POS_REG: REAL:=0;
	POS_REG_P: REAL:=0;
	POS_REG_I: REAL:=0;
	POS_WINDUP: REAL:=0;
	POS_DIF: REAL;
	POS_K_P: REAL:=1;//0.5625;								// PROPORTIONAL REGULATOR FACTOR
	POS_K_I: REAL:=0;//10;//4.563;							// INT. REGULATOR FACTOR
	POS_T_S: REAL:=0.004;							// SAMPLE TIME
	POS_K_WINDUP: REAL:=0;						// WINDUP FACTOR
	

//  VARIABLES FOR TOUCH PROBE LINE
	PTS_POSITION: 		ARRAY[1..50] OF REAL;
	PTS_MEASUREMENT: 		ARRAY[1..50] OF REAL;	
	PTS_SELCT_HISTOGRAM: ARRAY [1..10] OF WORD := [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
	PTS_MEASUREMENT_HISTOGRAM_1:  ARRAY [1..10] OF REAL;
	PTS_MEASUREMENT_HISTOGRAM_2:  ARRAY [1..10] OF REAL;
	RESULT: ARRAY [0..1] OF REAL:=[0,0];
	VarTest: BOOL := TRUE;
	
	Test_Var: WORD:=0;
	
	
	
	
END_VAR]]></Declaration>
  </GVL>
</TcPlcObject>